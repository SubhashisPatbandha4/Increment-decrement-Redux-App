{"version":3,"sources":["App.js","action/index.js","reportWebVitals.js","reducers/updown.js","reducers/index.js","store.js","index.js"],"names":["App","myState","useSelector","state","changeTheNumber","dispatch","useDispatch","react_default","a","createElement","Fragment","className","onClick","type","value","name","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","arguments","length","undefined","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","root","ReactDOM","createRoot","document","getElementById","subscribe","console","log","getState","render","StrictMode","es","src_App"],"mappings":"4MA2BeA,EAxBH,WACV,IAAMC,EAAUC,YAAY,SAACC,GAAK,OAAKA,EAAMC,kBACvCC,EAAWC,cACjB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mDAEbJ,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sDAGbJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMP,ECdtB,CACHQ,KAAM,eDa+CF,UAAU,qDAAqDG,MAAM,KAAIP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAW,MACrJJ,EAAAC,EAAAC,cAAA,SAAOM,KAAK,WAAWJ,UAAU,4GAA4GG,MAAOb,IACpJM,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMP,ECXtB,CACHQ,KAAM,eDU+CF,UAAU,oDAAoDG,MAAM,KAAKP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAW,UELhJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCECb,EAPS,WAAiC,IAAhCD,EAAK0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADV,EAEhB,QADgDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACjClB,MACX,IAAK,YAAa,OAAOV,EAAQ,EACjC,IAAK,YAAa,OAAOA,EAAQ,EACjC,QAAS,OAAOA,WCCT6B,EAJMC,YAAgB,CACjC7B,oBCAW8B,EAFDC,YAAYH,EAAcI,OAAOC,8BAAgCD,OAAOC,gCCKhFC,EAAOC,IAASC,WAAWC,SAASC,eAAe,SAEzDR,EAAMS,UAAU,kBAAMC,QAAQC,IAAIX,EAAMY,cACxCR,EAAKS,OACHxC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,WAAU,KACfzC,EAAAC,EAAAC,cAACwC,EAAA,EAAQ,CAACf,MAAOA,GACf3B,EAAAC,EAAAC,cAACyC,EAAG,SAQVlC","file":"static/js/main.6d768e94.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { increaseNumber, decreaseNumber } from \"./action/index\"\nconst App = () => {\n  const myState = useSelector((state) => state.changeTheNumber)\n  const dispatch = useDispatch()\n  return (\n    <>\n      <div className=\" text-center bg-warning vh-100  container-fluid\">\n\n        <h1>Increment/decrement counter</h1>\n        <h4>REDUX-APP</h4>\n        <div className='  text-center row m-auto p-5 mt-5 container-fluid '>\n\n\n          <button onClick={() => dispatch(increaseNumber())} className=\"col-2 m-auto btn btn-success text-white rounded-5 \" value=\"+\"><h1 className='display-1'>+</h1></button>\n          <input name=\"quantity\" className=\"text-center display-1 quantity__input auto col-4 w-25 mb-0 bg-white rounded-5 btn-outline-light border-0 \" value={myState} />\n          <button onClick={() => dispatch(decreaseNumber())} className=\"btn btn-danger m-auto col-2 text-white rounded-5 \" value=\"-\" ><h1 className='display-1'>-</h1></button>\n\n        </div>\n\n      </div>\n    </>\n\n  )\n}\n\nexport default App\n","export const increaseNumber = () => {\r\n    return {\r\n        type: \"INCREMENT\"\r\n    }\r\n}\r\nexport const decreaseNumber = () => {\r\n    return {\r\n        type: \"DECREMENT\"\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initalState = 0;\r\nconst changeTheNumber = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case \"INCREMENT\": return state + 1;\r\n        case \"DECREMENT\": return state - 1;\r\n        default: return state;\r\n    }\r\n}\r\nexport default changeTheNumber;","// root reducer\r\nimport changeTheNumber from \"./updown\"\r\nimport { combineReducers } from \"redux\";\r\nconst rootReducers = combineReducers({\r\n    changeTheNumber\r\n})\r\n\r\nexport default rootReducers;","import rootReducers from \"./reducers/index\";\r\nimport { createStore } from \"redux\"\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n// subscribe is a change listener\nstore.subscribe(() => console.log(store.getState()))\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}